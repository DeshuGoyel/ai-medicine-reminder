{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useTheme } from \"../hooks/useTheme\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SettingsScreen = function SettingsScreen() {\n  var _useTheme = useTheme(),\n    theme = _useTheme.theme,\n    isDarkMode = _useTheme.isDarkMode,\n    toggleTheme = _useTheme.toggleTheme;\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    notifications = _useState2[0],\n    setNotifications = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    soundEnabled = _useState4[0],\n    setSoundEnabled = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    autoSchedule = _useState6[0],\n    setAutoSchedule = _useState6[1];\n  var SettingItem = function SettingItem(_ref) {\n    var title = _ref.title,\n      description = _ref.description,\n      value = _ref.value,\n      onValueChange = _ref.onValueChange;\n    return _jsxs(View, {\n      style: [styles.settingItem, {\n        backgroundColor: theme.colors.card,\n        borderColor: theme.colors.border\n      }],\n      children: [_jsxs(View, {\n        style: styles.settingHeader,\n        children: [_jsx(Text, {\n          style: [styles.settingTitle, {\n            color: theme.colors.text\n          }],\n          children: title\n        }), _jsx(Switch, {\n          value: value,\n          onValueChange: onValueChange,\n          trackColor: {\n            false: '#767577',\n            true: theme.colors.primary\n          },\n          thumbColor: value ? '#ffffff' : '#f4f3f4'\n        })]\n      }), description && _jsx(Text, {\n        style: [styles.settingDescription, {\n          color: theme.colors.textSecondary\n        }],\n        children: description\n      })]\n    });\n  };\n  var SettingSection = function SettingSection(_ref2) {\n    var title = _ref2.title,\n      children = _ref2.children;\n    return _jsxs(View, {\n      style: styles.section,\n      children: [_jsx(Text, {\n        style: [styles.sectionTitle, {\n          color: theme.colors.textSecondary\n        }],\n        children: title\n      }), children]\n    });\n  };\n  return _jsxs(ScrollView, {\n    style: [styles.container, {\n      backgroundColor: theme.colors.background\n    }],\n    contentContainerStyle: styles.contentContainer,\n    children: [_jsx(SettingSection, {\n      title: \"Appearance\",\n      children: _jsx(SettingItem, {\n        title: \"Dark Mode\",\n        description: \"Use dark theme for better visibility in low light\",\n        value: isDarkMode,\n        onValueChange: toggleTheme\n      })\n    }), _jsxs(SettingSection, {\n      title: \"Notifications\",\n      children: [_jsx(SettingItem, {\n        title: \"Enable Notifications\",\n        description: \"Receive reminders for your medications\",\n        value: notifications,\n        onValueChange: setNotifications\n      }), _jsx(SettingItem, {\n        title: \"Sound Enabled\",\n        description: \"Play sound with medication reminders\",\n        value: soundEnabled,\n        onValueChange: setSoundEnabled\n      })]\n    }), _jsx(SettingSection, {\n      title: \"AI Features\",\n      children: _jsx(SettingItem, {\n        title: \"Smart Scheduling\",\n        description: \"Let AI optimize your medication schedule\",\n        value: autoSchedule,\n        onValueChange: setAutoSchedule\n      })\n    }), _jsxs(SettingSection, {\n      title: \"Data Management\",\n      children: [_jsx(TouchableOpacity, {\n        style: [styles.button, {\n          backgroundColor: theme.colors.primary\n        }],\n        onPress: function onPress() {},\n        children: _jsx(Text, {\n          style: [styles.buttonText, {\n            color: theme.colors.buttonText\n          }],\n          children: \"Export Medication History\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: [styles.button, {\n          backgroundColor: theme.colors.primary\n        }],\n        onPress: function onPress() {},\n        children: _jsx(Text, {\n          style: [styles.buttonText, {\n            color: theme.colors.buttonText\n          }],\n          children: \"Backup Data\"\n        })\n      })]\n    }), _jsx(View, {\n      style: styles.footer,\n      children: _jsx(Text, {\n        style: [styles.version, {\n          color: theme.colors.textSecondary\n        }],\n        children: \"Version 1.0.0\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  contentContainer: {\n    padding: 16\n  },\n  section: {\n    marginBottom: 24\n  },\n  sectionTitle: {\n    fontSize: 14,\n    fontWeight: '600',\n    marginBottom: 8,\n    textTransform: 'uppercase',\n    letterSpacing: 1\n  },\n  settingItem: {\n    padding: 16,\n    borderRadius: 12,\n    marginBottom: 12,\n    borderWidth: 1\n  },\n  settingHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  settingTitle: {\n    fontSize: 16,\n    fontWeight: '600'\n  },\n  settingDescription: {\n    fontSize: 14,\n    marginTop: 4\n  },\n  button: {\n    padding: 16,\n    borderRadius: 12,\n    alignItems: 'center',\n    marginBottom: 12\n  },\n  buttonText: {\n    fontSize: 16,\n    fontWeight: '600'\n  },\n  footer: {\n    marginTop: 24,\n    alignItems: 'center'\n  },\n  version: {\n    fontSize: 14\n  }\n});\nexport default SettingsScreen;","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","Switch","ScrollView","StyleSheet","useTheme","jsx","_jsx","jsxs","_jsxs","SettingsScreen","_useTheme","theme","isDarkMode","toggleTheme","_useState","_useState2","_slicedToArray","notifications","setNotifications","_useState3","_useState4","soundEnabled","setSoundEnabled","_useState5","_useState6","autoSchedule","setAutoSchedule","SettingItem","_ref","title","description","value","onValueChange","style","styles","settingItem","backgroundColor","colors","card","borderColor","border","children","settingHeader","settingTitle","color","text","trackColor","false","true","primary","thumbColor","settingDescription","textSecondary","SettingSection","_ref2","section","sectionTitle","container","background","contentContainerStyle","contentContainer","button","onPress","buttonText","footer","version","create","flex","padding","marginBottom","fontSize","fontWeight","textTransform","letterSpacing","borderRadius","borderWidth","flexDirection","justifyContent","alignItems","marginTop"],"sources":["/project/sandbox/user-workspace/src/screens/SettingsScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  Switch,\n  ScrollView,\n  StyleSheet,\n} from 'react-native';\nimport { useTheme } from '../hooks/useTheme';\n\nconst SettingsScreen = () => {\n  const { theme, isDarkMode, toggleTheme } = useTheme();\n  const [notifications, setNotifications] = useState(true);\n  const [soundEnabled, setSoundEnabled] = useState(true);\n  const [autoSchedule, setAutoSchedule] = useState(false);\n\n  const SettingItem = ({ title, description, value, onValueChange }) => (\n    <View\n      style={[\n        styles.settingItem,\n        {\n          backgroundColor: theme.colors.card,\n          borderColor: theme.colors.border,\n        },\n      ]}\n    >\n      <View style={styles.settingHeader}>\n        <Text style={[styles.settingTitle, { color: theme.colors.text }]}>\n          {title}\n        </Text>\n        <Switch\n          value={value}\n          onValueChange={onValueChange}\n          trackColor={{ false: '#767577', true: theme.colors.primary }}\n          thumbColor={value ? '#ffffff' : '#f4f3f4'}\n        />\n      </View>\n      {description && (\n        <Text\n          style={[styles.settingDescription, { color: theme.colors.textSecondary }]}\n        >\n          {description}\n        </Text>\n      )}\n    </View>\n  );\n\n  const SettingSection = ({ title, children }) => (\n    <View style={styles.section}>\n      <Text\n        style={[styles.sectionTitle, { color: theme.colors.textSecondary }]}\n      >\n        {title}\n      </Text>\n      {children}\n    </View>\n  );\n\n  return (\n    <ScrollView\n      style={[styles.container, { backgroundColor: theme.colors.background }]}\n      contentContainerStyle={styles.contentContainer}\n    >\n      <SettingSection title=\"Appearance\">\n        <SettingItem\n          title=\"Dark Mode\"\n          description=\"Use dark theme for better visibility in low light\"\n          value={isDarkMode}\n          onValueChange={toggleTheme}\n        />\n      </SettingSection>\n\n      <SettingSection title=\"Notifications\">\n        <SettingItem\n          title=\"Enable Notifications\"\n          description=\"Receive reminders for your medications\"\n          value={notifications}\n          onValueChange={setNotifications}\n        />\n        <SettingItem\n          title=\"Sound Enabled\"\n          description=\"Play sound with medication reminders\"\n          value={soundEnabled}\n          onValueChange={setSoundEnabled}\n        />\n      </SettingSection>\n\n      <SettingSection title=\"AI Features\">\n        <SettingItem\n          title=\"Smart Scheduling\"\n          description=\"Let AI optimize your medication schedule\"\n          value={autoSchedule}\n          onValueChange={setAutoSchedule}\n        />\n      </SettingSection>\n\n      <SettingSection title=\"Data Management\">\n        <TouchableOpacity\n          style={[\n            styles.button,\n            { backgroundColor: theme.colors.primary },\n          ]}\n          onPress={() => {/* Handle export */}}\n        >\n          <Text style={[styles.buttonText, { color: theme.colors.buttonText }]}>\n            Export Medication History\n          </Text>\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          style={[\n            styles.button,\n            { backgroundColor: theme.colors.primary },\n          ]}\n          onPress={() => {/* Handle backup */}}\n        >\n          <Text style={[styles.buttonText, { color: theme.colors.buttonText }]}>\n            Backup Data\n          </Text>\n        </TouchableOpacity>\n      </SettingSection>\n\n      <View style={styles.footer}>\n        <Text style={[styles.version, { color: theme.colors.textSecondary }]}>\n          Version 1.0.0\n        </Text>\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  contentContainer: {\n    padding: 16,\n  },\n  section: {\n    marginBottom: 24,\n  },\n  sectionTitle: {\n    fontSize: 14,\n    fontWeight: '600',\n    marginBottom: 8,\n    textTransform: 'uppercase',\n    letterSpacing: 1,\n  },\n  settingItem: {\n    padding: 16,\n    borderRadius: 12,\n    marginBottom: 12,\n    borderWidth: 1,\n  },\n  settingHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  settingTitle: {\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  settingDescription: {\n    fontSize: 14,\n    marginTop: 4,\n  },\n  button: {\n    padding: 16,\n    borderRadius: 12,\n    alignItems: 'center',\n    marginBottom: 12,\n  },\n  buttonText: {\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  footer: {\n    marginTop: 24,\n    alignItems: 'center',\n  },\n  version: {\n    fontSize: 14,\n  },\n});\n\nexport default SettingsScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}